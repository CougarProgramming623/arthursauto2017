// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#ifndef ROBOTMAP_H
#define ROBOTMAP_H

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
#include "WPILib.h"
#include "AHRS.h"
#include "CANTalon.h"
#include "Subsystems/ButtonBoard.h"

#define DIGITAL_INPUT0 0
#define DIGITAL_INPUT1 1
#define DIGITAL_INPUT2 2

#define SPEED_SOLENOID 0
#define UPDOWN_SOLENOID 1
#define OPENCLOSE_SOLENOID 2

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
class RobotMap {
public:
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	static std::shared_ptr<SpeedController> subsystemDrivetreadLeftFront;
	static std::shared_ptr<SpeedController> subsystemDrivetreadLeftBack;
	static std::shared_ptr<SpeedController> subsystemDrivetreadRightBack;
	static std::shared_ptr<SpeedController> subsystemDrivetreadRightFront;
	static std::shared_ptr<RobotDrive> subsystemDriveRobotDrive41;
	static AHRS *ahrs;
	static Solenoid *ClaspSolenoid;
	static Solenoid *ArmSolenoid;
	static Solenoid *SpeedSolenoid;

	static CANTalon *cantalonLeftFront;
	static CANTalon *cantalonLeftBack;
	static CANTalon *cantalonRightBack;
	static CANTalon *cantalonRightFront;

	static DigitalInput *digitalInput0;
	static DigitalInput *digitalInput1;
	static DigitalInput *digitalInput2;

	static Joystick *buttonBoard;

	static CANTalon *cantalonClimb;
	static CANTalon *cantalonClimbSlave;

	static double angleFromCamera;

	static void init();
};
#endif
